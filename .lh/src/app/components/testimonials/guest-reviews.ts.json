{
    "sourceFile": "src/app/components/testimonials/guest-reviews.ts",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 2,
            "patches": [
                {
                    "date": 1743088088967,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1743090746318,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -15,15 +15,17 @@\n \ttestimony,\n }) => {\n \t// Create an array of filled stars based on rating\n \tconst renderStars = () => {\n-\t\treturn Array.from({ length: 5 }, (_, index) => (\n-\t\t\t<span\n-\t\t\t\tkey={index}\n-\t\t\t\tclassName={`${styles.star} ${index < rating ? styles.filled : \"\"}`}>\n-\t\t\t\t★\n-\t\t\t</span>\n-\t\t));\n+\t\treturn Array.from({ length: 5 }, (_, index) => {\n+\t\t\treturn (\n+\t\t\t\t<span\n+\t\t\t\t\tkey={`star-${index}`}\n+\t\t\t\t\tclassName={`${styles.star} ${index < rating ? styles.filled : \"\"}`}>\n+\t\t\t\t\t★\n+\t\t\t\t</span>\n+\t\t\t);\n+\t\t});\n \t};\n \n \treturn (\n \t\t<div className={styles.reviewCard}>\n@@ -45,9 +47,9 @@\n \t\t\t<h2 className={styles.heading}>Guest Reviews</h2>\n \t\t\t<div className={styles.reviewGrid}>\n \t\t\t\t{reviews.map((review, index) => (\n \t\t\t\t\t<GuestReview\n-\t\t\t\t\t\tkey={index}\n+\t\t\t\t\t\tkey={`review-${index}`}\n \t\t\t\t\t\tname={review.name}\n \t\t\t\t\t\trating={review.rating}\n \t\t\t\t\t\ttestimony={review.testimony}\n \t\t\t\t\t/>\n"
                },
                {
                    "date": 1743090831862,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,31 +1,26 @@\n+\"use client\";\n+\n import React from \"react\";\n-import styles from \"./GuestReviews.module.css\";\n+import styles from \"./guest-reviews.module.css\";\n \n // Define the type for a single guest review\n-interface GuestReviewProps {\n+interface ReviewProps {\n \tname: string;\n \trating: number;\n \ttestimony: string;\n }\n \n // Component for individual guest review\n-const GuestReview: React.FC<GuestReviewProps> = ({\n-\tname,\n-\trating,\n-\ttestimony,\n-}) => {\n-\t// Create an array of filled stars based on rating\n+const ReviewCard: React.FC<ReviewProps> = ({ name, rating, testimony }) => {\n \tconst renderStars = () => {\n-\t\treturn Array.from({ length: 5 }, (_, index) => {\n-\t\t\treturn (\n-\t\t\t\t<span\n-\t\t\t\t\tkey={`star-${index}`}\n-\t\t\t\t\tclassName={`${styles.star} ${index < rating ? styles.filled : \"\"}`}>\n-\t\t\t\t\t★\n-\t\t\t\t</span>\n-\t\t\t);\n-\t\t});\n+\t\treturn Array.from({ length: 5 }).map((_, index) => (\n+\t\t\t<span\n+\t\t\t\tkey={`star-${index}`}\n+\t\t\t\tclassName={`${styles.star} ${index < rating ? styles.filled : \"\"}`}>\n+\t\t\t\t★\n+\t\t\t</span>\n+\t\t));\n \t};\n \n \treturn (\n \t\t<div className={styles.reviewCard}>\n@@ -37,18 +32,18 @@\n };\n \n // Main Reviews Container Component\n interface GuestReviewsProps {\n-\treviews: GuestReviewProps[];\n+\treviews: ReviewProps[];\n }\n \n const GuestReviews: React.FC<GuestReviewsProps> = ({ reviews }) => {\n \treturn (\n \t\t<div className={styles.reviewsContainer}>\n \t\t\t<h2 className={styles.heading}>Guest Reviews</h2>\n \t\t\t<div className={styles.reviewGrid}>\n \t\t\t\t{reviews.map((review, index) => (\n-\t\t\t\t\t<GuestReview\n+\t\t\t\t\t<ReviewCard\n \t\t\t\t\t\tkey={`review-${index}`}\n \t\t\t\t\t\tname={review.name}\n \t\t\t\t\t\trating={review.rating}\n \t\t\t\t\t\ttestimony={review.testimony}\n"
                }
            ],
            "date": 1743088088967,
            "name": "Commit-0",
            "content": "import React from \"react\";\nimport styles from \"./GuestReviews.module.css\";\n\n// Define the type for a single guest review\ninterface GuestReviewProps {\n\tname: string;\n\trating: number;\n\ttestimony: string;\n}\n\n// Component for individual guest review\nconst GuestReview: React.FC<GuestReviewProps> = ({\n\tname,\n\trating,\n\ttestimony,\n}) => {\n\t// Create an array of filled stars based on rating\n\tconst renderStars = () => {\n\t\treturn Array.from({ length: 5 }, (_, index) => (\n\t\t\t<span\n\t\t\t\tkey={index}\n\t\t\t\tclassName={`${styles.star} ${index < rating ? styles.filled : \"\"}`}>\n\t\t\t\t★\n\t\t\t</span>\n\t\t));\n\t};\n\n\treturn (\n\t\t<div className={styles.reviewCard}>\n\t\t\t<div className={styles.starContainer}>{renderStars()}</div>\n\t\t\t<p className={styles.testimony}>\"{testimony}\"</p>\n\t\t\t<p className={styles.name}>{name}</p>\n\t\t</div>\n\t);\n};\n\n// Main Reviews Container Component\ninterface GuestReviewsProps {\n\treviews: GuestReviewProps[];\n}\n\nconst GuestReviews: React.FC<GuestReviewsProps> = ({ reviews }) => {\n\treturn (\n\t\t<div className={styles.reviewsContainer}>\n\t\t\t<h2 className={styles.heading}>Guest Reviews</h2>\n\t\t\t<div className={styles.reviewGrid}>\n\t\t\t\t{reviews.map((review, index) => (\n\t\t\t\t\t<GuestReview\n\t\t\t\t\t\tkey={index}\n\t\t\t\t\t\tname={review.name}\n\t\t\t\t\t\trating={review.rating}\n\t\t\t\t\t\ttestimony={review.testimony}\n\t\t\t\t\t/>\n\t\t\t\t))}\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport default GuestReviews;\n"
        }
    ]
}